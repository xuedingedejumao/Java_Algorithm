public class AVL_Tree {
    public static void main(String[] args) {

    }
}
class Node {
    int value;
    Node left;
    Node right;

    Node(int value) {
        this.value = value;
    }

    public int height(){
        return Math.max(left == null?0:left.height(),right == null?0:right.height()) + 1;
    }

    public void add(Node node) {
        if (node == null) return;

        if (node.value < this.value) {
            if (this.left == null) {
                this.left = node;
            } else {
                this.left.add(node);
            }
        } else {
            if (this.right == null) {
                this.right = node;
            } else {
                this.right.add(node);
            }
        }
    }

    public Node search(int value) {
        if (value == this.value) {
            return this;
        } else if (value < this.value) {
            if (this.left == null) return null;
            return this.left.search(value);
        } else {
            if (this.right == null) return null;
            return this.right.search(value);
        }
    }

    public Node searchPar(int value) {
        if ((this.left != null && this.left.value == value) || (this.right != null && this.right.value == value)) {
            return this;
        } else {
            if (value < this.value && this.left != null) {
                return this.left.searchPar(value);
            } else if (value >= this.value && this.right != null) {
                return this.right.searchPar(value);
            } else {
                return null;
            }
        }
    }

    @Override
    public String toString() {
        return "Node{" +
                "value=" + value +
                '}';
    }

    public void infixorder() {
        if (this.left != null) {
            this.left.infixorder();
        }
        System.out.println(this.value);
        if (this.right != null) {
            this.right.infixorder();
        }
    }
}
